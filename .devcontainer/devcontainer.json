// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.217.4/containers/python-3
{
	"name": "IoT Edge Solution",
	"dockerComposeFile": [
		"./docker-compose.yml"
	],
	"service": "dev_container",
	"workspaceFolder": "/workspace",
	// Set *default* container specific settings.json values on container create.
	"settings": {
		"python.defaultInterpreterPath": "/usr/local/bin/python",
		"python.linting.enabled": true,
		"python.linting.pylintEnabled": false,
		"python.formatting.provider": "black",
		"python.linting.flake8Enabled": true,
		"editor.formatOnSave": true,
		"python.testing.pytestEnabled": false,
		"python.testing.unittestEnabled": true,
		"python.formatting.autopep8Path": "/usr/local/py-utils/bin/autopep8",
		"python.formatting.blackPath": "/usr/local/py-utils/bin/black",
		"python.formatting.yapfPath": "/usr/local/py-utils/bin/yapf",
		"python.linting.banditPath": "/usr/local/py-utils/bin/bandit",
		"python.linting.flake8Path": "/usr/local/py-utils/bin/flake8",
		"python.linting.mypyPath": "/usr/local/py-utils/bin/mypy",
		"python.linting.pycodestylePath": "/usr/local/py-utils/bin/pycodestyle",
		"python.linting.pydocstylePath": "/usr/local/py-utils/bin/pydocstyle",
		"python.linting.pylintPath": "/usr/local/py-utils/bin/pylint",
		"azure-iot-edge.defaultPlatform": {
			"platform": "arm64v8",
			"alias": null
		},
		"terminal.integrated.shellIntegration.enabled": true,
		"terminal.integrated.defaultProfile.linux": "bash"
	},
	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"ms-vscode-remote.remote-containers",
		"ms-python.python",
		"ms-python.vscode-pylance",
		"ms-azuretools.vscode-docker",
		"ms-vscode.azure-account",
		"vsciot-vscode.vscode-iot-device-cube",
		"vsciot-vscode.azure-iot-tools",
		"streetsidesoftware.code-spell-checker",
		"GitHub.vscode-pull-request-github",
		"esbenp.prettier-vscode",
		"redhat.vscode-yaml",
		"VisualStudioExptTeam.vscodeintellicode"
	],
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],
	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "pip3 install --user -r requirements.txt",
	// Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "vscode",
	"features": {
		"docker-in-docker": {
			"moby": false,
			"version": "latest"
		},
		"git": "latest"
	}
}